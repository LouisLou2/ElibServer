<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.leo.elib.mapper.BookInfoMapper">
    
    <resultMap id ="BookInfoMap" type="BookInfo" autoMapping="true">
        <id column="isbn" property="isbn"/>
        <result column="original_title" property="originalTitle"/>
        <result column="publisher_id" property="publisherId"/>
        <result column="publisher_name" property="publisherName"/>
        <result column="pub_date" property="pubDate"/>
        <result column="word_count" property="wordCount"/>
        <result column="lang_id" property="langId"/>
        <result column="cover_m_url" property="coverMUrl"/>
        <result column="cover_l_url" property="coverLUrl"/>
        <result column="cover_s_url" property="coverSUrl"/>
        <result column="ebook_url" property="ebookUrl"/>
        <result column="category_id" property="category1" javaType="int"/>
        <result column="subcategory_id" property="category2" javaType="int"/>
        <collection property="authorIds" ofType="Integer" javaType="java.util.List">
            <result column="author_id"/>
        </collection>
        <collection property="authorNames" ofType="String" javaType="java.util.List">
            <result column="author_name"/>
        </collection>
        <collection property="tagIds" ofType="Short" javaType="java.util.List">
            <result column="tag_id"/>
        </collection>
    </resultMap>
    
    <resultMap id="BookBriefMap" type="BookBrief" autoMapping="true">
        <id column="isbn" property="isbn"/>
        <result column="publisher_name" property="publisherName"/>
        <result column="cover_s_url" property="coverSUrl"/>
        <result column="cover_m_url" property="coverMUrl"/>
        <result column="has_ebook" property="hasEbook"/>
        <collection property="authorNames" ofType="String" javaType="java.util.List">
            <result column="author_name"/>
        </collection>
    </resultMap>
    
    <resultMap id="AuthorWithBooks" type="AuthorWithBookLis" autoMapping="true">
        <id column="target_author_id" property="authorId"/>
        <result column="target_author_name" property="name"/>
        <result column="target_author_desc" property="desc"/>
        <result column="target_author_book_count" property="bookCount"/>
        <collection property="books" ofType="BookBrief" resultMap="BookBriefMap"/>
    </resultMap>
    
    <sql id="bookInfoFields">
        select bi.isbn,
               bi.title,
               bi.original_title,
               bi.publisher_id,
               p.publisher_name,
               bi.pub_date,
               bi.`desc`,
               bi.word_count,
               bi.lang_id,
               bi.cover_s_url,
               bi.cover_m_url,
               bi.cover_l_url,
               bi.rating,
               IF(bi.ebook_url is null, false, true) as has_ebook,
               bi.category_id,
               bi.subcategory_id,
               a.author_id,
               a.name as author_name,
               btc.tag_id
    </sql>

    <sql id="getBookInfo">
        <include refid="bookInfoFields"/>
        from book_info bi
        inner join publisher p on bi.publisher_id = p.publisher_id
        inner join book_author ba on bi.isbn = ba.isbn
        inner join author a on ba.author_id = a.author_id
        left  join book_tag_cor btc on bi.isbn = btc.isbn
    </sql>
    
    <sql id="BriefBookFields">
        select bi.isbn,
               bi.title,
               p.publisher_name,
               bi.cover_s_url,
               bi.cover_m_url,
               bi.rating,
               IF(bi.ebook_url is null, false, true) as has_ebook,
               a.name as author_name
    </sql>
    
    <sql id="getBookBrief">
        <include refid="BriefBookFields"/>
        from book_info bi
        inner join publisher p on bi.publisher_id = p.publisher_id
        inner join book_author ba on bi.isbn = ba.isbn
        inner join author a on ba.author_id = a.author_id
    </sql>

    <select id="getBookInfoWithoutLibs" resultMap="BookInfoMap">
        select bi.isbn,
               bi.title,
               bi.original_title,
               bi.publisher_id,
               p.publisher_name,
               bi.pub_date,
               bi.`desc`,
               bi.word_count,
               bi.lang_id,
               bi.cover_s_url,
               bi.cover_m_url,
               bi.cover_l_url,
               bi.rating,
               bi.ebook_url,
               bi.category_id,
               bi.subcategory_id,
               a.author_id,
               a.name as author_name,
               btc.tag_id
        from book_info bi
         inner join publisher p on bi.publisher_id = p.publisher_id
         inner join book_author ba on bi.isbn = ba.isbn
         inner join author a on ba.author_id = a.author_id
         left  join book_tag_cor btc on bi.isbn = btc.isbn
        where bi.isbn = #{isbn}
    </select>

    <select id="getBookBriefList" resultMap="BookBriefMap">
        <include refid="getBookBrief"/>
        where bi.isbn in
        <foreach collection="isbns" item="isbn" open="(" close=")" separator=",">
            #{isbn}
        </foreach>
    </select>
    
    <select id="getCategoryBriefBooks" resultType="BookBrief">
        <include refid="BriefBookFields"/>
        from (
            select
                book_info.isbn as isbn,
                title,
                publisher_id,
                cover_s_url,
                cover_m_url,
                rating,
                ebook_url
            from book_info
            <choose>
                <when test="categoryLevel == 1">
                    where category_id = #{cateId}
                </when>
                <otherwise>
                    where subcategory_id = #{cateId}
                </otherwise>
            </choose>
            order by rating desc
            limit #{num} offset #{offset}
        ) bi
        inner join publisher p on bi.publisher_id = p.publisher_id
        inner join book_author ba on bi.isbn = ba.isbn
        inner join author a on ba.author_id = a.author_id
    </select>
    
    <select id="getAuthorBooks" resultMap="BookBriefMap">
        <include refid="BriefBookFields"/>
        from (
            select
                book_info.isbn as isbn,
                title,
                publisher_id,
                cover_s_url,
                cover_m_url,
                rating,
                ebook_url
            from book_author
            inner join book_info on book_author.isbn = book_info.isbn
            where book_author.author_id = #{authorId}
            order by book_info.rating desc
            limit #{num} offset #{offset}
        ) as bi
        inner join publisher p on bi.publisher_id = p.publisher_id
        inner join book_author ba on bi.isbn = ba.isbn
        inner join author a on ba.author_id = a.author_id
    </select>
    
    <select id="getAuthorWithBooks" resultMap="AuthorWithBooks">
        <!-- 这个临时表只有一行 -->
        with author_info as (
            select a.author_id as author_id, name, `desc`, count(1) as book_count
            from author as a
            inner join book_author ba on a.author_id = ba.author_id
            where a.author_id = #{authorId}
        )
        
        <include refid="BriefBookFields"/>
        , (select author_id from author_info) as target_author_id,
        (select name from author_info) as target_author_name,
        (select `desc` from author_info) as target_author_desc,
        (select book_count from author_info) as target_author_book_count
        from (
            select
                book_info.isbn as isbn,
                title,
                publisher_id,
                cover_s_url,
                cover_m_url,
                rating,
                ebook_url
            from book_author
            inner join book_info on book_author.isbn = book_info.isbn
            where book_author.author_id = #{authorId}
            order by book_info.rating desc
            limit #{num}
        ) as bi
        inner join publisher p on bi.publisher_id = p.publisher_id
        inner join book_author ba on bi.isbn = ba.isbn
        inner join author a on ba.author_id = a.author_id
    </select>

    <select id="getBookBriefsByRating" resultMap="BookBriefMap">
        <include refid="BriefBookFields"/>
        from (
            select
            book_info.isbn as isbn,
            title,
            publisher_id,
            cover_s_url,
            cover_m_url,
            rating,
            ebook_url
            from book_info
            order by rating desc
            limit #{num} offset #{offset}
        ) bi
        inner join publisher p on bi.publisher_id = p.publisher_id
        inner join book_author ba on bi.isbn = ba.isbn
        inner join author a on ba.author_id = a.author_id
    </select>

    <select id="getBookInfoWithoutLibsList" resultMap="BookInfoMap">
        select bi.isbn,
               bi.title,
               bi.original_title,
               bi.publisher_id,
               p.publisher_name,
               bi.pub_date,
               bi.`desc`,
               bi.word_count,
               bi.lang_id,
               bi.cover_s_url,
               bi.cover_m_url,
               bi.cover_l_url,
               bi.rating,
               bi.ebook_url,
               bi.category_id,
               bi.subcategory_id,
               a.author_id,
               a.name as author_name,
               btc.tag_id
        from book_info bi
                 inner join publisher p on bi.publisher_id = p.publisher_id
                 inner join book_author ba on bi.isbn = ba.isbn
                 inner join author a on ba.author_id = a.author_id
                 left  join book_tag_cor btc on bi.isbn = btc.isbn
        where bi.isbn in
        <foreach collection="isbns" item="isbn" open="(" close=")" separator=",">
            #{isbn}
        </foreach>
    </select>

    <select id="debug_getIsbnsByTime" resultType="java.lang.String">
        select isbn
        from book_info
        order by pub_date desc
        limit #{num} offset #{offset}
    </select>





    <select id="debug_getBookInfo" resultMap="BookInfoMap">
        select bi.isbn,
               bi.title,
               bi.original_title,
               bi.publisher_id,
               p.publisher_name,
               bi.pub_date,
               bi.`desc`,
               bi.word_count,
               bi.lang_id,
               bi.cover_s_url,
               bi.cover_m_url,
               bi.cover_l_url,
               bi.rating,
               bi.ebook_url,
               bi.category_id,
               bi.subcategory_id,
               a.author_id,
               a.name as author_name,
               btc.tag_id
        from (
                 select *
                 from book_info
                          limit #{num} offset #{offset}
             ) as bi
                 inner join publisher p on bi.publisher_id = p.publisher_id
                 inner join book_author ba on bi.isbn = ba.isbn
                 inner join author a on ba.author_id = a.author_id
                 left  join book_tag_cor btc on bi.isbn = btc.isbn
    </select>

</mapper>




<!--<select id="getBooksByRating" resultMap="BookInfoMap">-->
<!--select bi.isbn,-->
<!--       bi.title,-->
<!--       bi.original_title,-->
<!--       bi.publisher_id,-->
<!--       p.publisher_name,-->
<!--       bi.pub_date,-->
<!--       bi.`desc`,-->
<!--       bi.word_count,-->
<!--       bi.lang_id,-->
<!--       bi.cover_s_url,-->
<!--       bi.cover_m_url,-->
<!--       bi.cover_l_url,-->
<!--       bi.rating,-->
<!--       bi.ebook_url,-->
<!--       bi.category_id,-->
<!--       bi.subcategory_id,-->
<!--       a.author_id,-->
<!--       a.name as author_name,-->
<!--       btc.tag_id-->
<!--from (-->
<!--         select *-->
<!--         from book_info-->
<!--         order by rating desc-->
<!--             limit #{num}-->
<!--     ) as bi-->
<!--         inner join publisher p on bi.publisher_id = p.publisher_id-->
<!--         inner join book_author ba on bi.isbn = ba.isbn-->
<!--         inner join author a on ba.author_id = a.author_id-->
<!--         left  join book_tag_cor btc on bi.isbn = btc.isbn-->
<!--</select>-->